jar {
    enabled = true
    classifier = ""
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

subprojects {

    apply plugin: 'maven-publish'
    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId = "$group"
                artifactId = rootProject.name + '-' + project.name
                version = "$version"

                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = rootProject.name
                    description = 'A set of Spring exception handlers making sure the application always returns a consistent error response.'
                    url = 'https://github.com/lsd-consulting/spring-http-exception-handling-library'
                    licenses {
                        license {
                            name = "MIT License"
                            url = "https://github.com/lsd-consulting/spring-http-exception-handling-library/blob/main/LICENSE.txt"
                            distribution = "repo"
                        }
                    }
                    developers {
                        developer {
                            name = "Lukasz"
                            email = "lukasz.gryzbon@gmail.com"
                            organization = 'Integreety Ltd.'
                            organizationUrl = 'https://www.integreety.co.uk'
                        }
                        developer {
                            name = "Nick"
                            email = "nicholas.mcdowall@gmail.com"
                            organization = 'NKM IT Solutions'
                            organizationUrl = 'https://github.com/nickmcdowall'
                        }
                    }
                    scm {
                        url = "https://github.com/lsd-consulting/spring-http-exception-handling-library.git"
                    }
                }
                repositories {
                    maven {
                        name = 'sonatype'
                        url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                        credentials(PasswordCredentials)
                    }
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

signing {
    if (project.findProperty("signingKey")) {
        // Use in-memory ascii-armored keys
        def signingKey = findProperty("signingKey")
        def signingPassword = findProperty("signingPassword")
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications
    } else {
        // Use signing properties in ~/.gradle/gradle.properties
        sign publishing.publications
    }
}
